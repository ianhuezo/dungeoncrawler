{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.dac450ee12034b2024b7.hot-update.js","sources":["webpack:///./pages/level.js"],"sourcesContent":["import Map from './map'\r\nimport React from 'react'\r\nimport Square from './square'\r\n\r\n\r\nconst screen = {\r\n    width: '50%',\r\n    height: '100%',\r\n    backgroundColor: 'black',\r\n}\r\n\r\nconst squareContainer = {\r\n    margin: '0 auto',\r\n    position: 'relative',\r\n    length: '100%',\r\n    width: '100%',\r\n    padding: 0,\r\n    border: 0,\r\n    fontSize: 0,\r\n    letterSpacing: '-1px',\r\n}\r\n\r\n\r\n\r\nclass Level extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        //row col for new map\r\n        this.board = this.props.map\r\n        // this.board = new Map(this.props.rows, this.props.cols);\r\n        this.pixelSize = this.props.pixelSize;\r\n        this.arr2d = this.board.contents\r\n        \r\n\r\n    }\r\n    componentWillMount(){\r\n        var id = 0\r\n        this.squares = Object.keys(this.arr2d).map((el,i) => {\r\n            var offsetY = i*this.pixelSize;\r\n            var single = this.arr2d[el].map((sub_el,j) => {\r\n                var offsetX = j*this.pixelSize\r\n                //sides\r\n                if(sub_el.type == 'X')\r\n                {\r\n                    {id += 1}\r\n                    return <Square key={id} x={offsetX} y={offsetY} size={this.pixelSize} node={sub_el}/>\r\n                }\r\n                //corner (should be next to clear blocks)\r\n                else if(sub_el.type == 'C')\r\n                {\r\n                    {id += 1}\r\n                    return <Square key={id} x={offsetX} y={offsetY} size={this.pixelSize} node={sub_el}/>\r\n                }\r\n                //the gooey insides\r\n                else if(sub_el.type == 'L')\r\n                {\r\n                    {id += 1}\r\n                    return <Square key={id} x={offsetX} y={offsetY} size={this.pixelSize}  color='white' node={sub_el}/>\r\n                }\r\n                //hallways\r\n                else if(sub_el.type == 'H')\r\n                {\r\n                    {id += 1}\r\n                    return <Square key={id} x={offsetX} y={offsetY} size={this.pixelSize}  color='white' node={sub_el}/>\r\n                }\r\n                //blanks\r\n                else if(sub_el.type == '-')\r\n                {\r\n                    {id += 1}\r\n                    return <Square key={id} x={offsetX} y={offsetY} size={this.pixelSize} node={sub_el}/>\r\n                }\r\n            })\r\n            {id += 1}\r\n            return(\r\n                <div key={id} style={squareContainer}> {single}</div>\r\n            )\r\n         })\r\n    }\r\n    render(){\r\n\r\n        return(\r\n            <div style = {screen}>\r\n                {this.squares}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Level\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAYA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA7DA;AACA;AA+DA;;;;A","sourceRoot":""}