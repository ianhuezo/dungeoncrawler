{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.1c6e574e904bb78edb15.hot-update.js","sources":["webpack:///./pages/level.js"],"sourcesContent":["import Map from './map'\r\nimport React from 'react'\r\nimport Square from './square'\r\n\r\n\r\nconst screen = {\r\n    width: '1000px',\r\n    height: '600px',\r\n    backgroundColor: 'grey',\r\n    margin: '0 auto',\r\n}\r\n\r\nconst squareContainer = {\r\n    margin: '0 auto',\r\n    position: 'relative',\r\n    top: '10%',\r\n    width: '70%',\r\n    padding: 0,\r\n    border: 0,\r\n    fontSize: 0,\r\n    letterSpacing: '-1px',\r\n}\r\n\r\n\r\n\r\nclass Level extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        //row col for new map\r\n        this.board = new Map([5, 50], 80, 50);\r\n        this.pixelSize = 8;\r\n        this.arr2d = this.board.contents\r\n        \r\n\r\n    }\r\n\r\n    render(){\r\n        var squares = Object.keys(this.arr2d).map((el,i) => {\r\n            var offsetY = i*this.pixelSize;\r\n            var single = this.arr2d[el].map((sub_el,j) => {\r\n                var offsetX = j*this.pixelSize\r\n                if(sub_el == 'O')\r\n                {\r\n                    return <Square x={offsetX} y={offsetY} size={this.pixelSize} color='white'/>\r\n                }\r\n                else{\r\n                    return <Square x={offsetX} y={offsetY} size={this.pixelSize}/>\r\n                }\r\n            })\r\n            return(\r\n                <div style={squareContainer}> {single}</div>\r\n            )\r\n         })\r\n\r\n        return(\r\n            <div style = {screen}>\r\n                {squares}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Level\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAYA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAlCA;AACA;AAoCA;;;;A","sourceRoot":""}